import{c as W,d as x,e as v,f as m,g as T,h as B,i as E,j as C}from"./useFocus-DvAqnNhs.js";import{r as c}from"./index-D4lIrffr.js";function w(b){let{isDisabled:h,onBlurWithin:i,onFocusWithin:a,onFocusWithinChange:t}=b,r=c.useRef({isFocusWithin:!1}),{addGlobalListener:s,removeAllGlobalListeners:u}=W(),n=c.useCallback(e=>{e.currentTarget.contains(e.target)&&r.current.isFocusWithin&&!e.currentTarget.contains(e.relatedTarget)&&(r.current.isFocusWithin=!1,u(),i&&i(e),t&&t(!1))},[i,t,r,u]),f=x(n),p=c.useCallback(e=>{if(!e.currentTarget.contains(e.target))return;const o=v(e.target),g=m(o);if(!r.current.isFocusWithin&&g===T(e.nativeEvent)){a&&a(e),t&&t(!0),r.current.isFocusWithin=!0,f(e);let l=e.currentTarget;s(o,"focus",d=>{if(r.current.isFocusWithin&&!B(l,d.target)){let $=new o.defaultView.FocusEvent("blur",{relatedTarget:d.target});E($,l);let F=C($);n(F)}},{capture:!0})}},[a,t,f,s,n]);return h?{focusWithinProps:{onFocus:void 0,onBlur:void 0}}:{focusWithinProps:{onFocus:p,onBlur:n}}}export{w as $};
